---
title: "Client Report - Can You Predict That?"
subtitle: "Course DS 250"
author: "[Carson Aller]"
format:
  html:
    self-contained: true
    page-layout: full
    title-block-banner: true
    toc: true
    toc-depth: 3
    toc-location: body
    number-sections: false
    html-math-method: katex
    code-fold: true
    code-summary: "Show the code"
    code-overflow: wrap
    code-copy: hover
    code-tools:
        source: false
        toggle: true
        caption: See code
execute: 
  warning: false
    
---

```{python}
import pandas as pd 
import numpy as np
from lets_plot import *
# add the additional libraries you need to import for ML here

LetsPlot.setup_html(isolated_frame=True)
```


```{python}
# Learn morea about Code Cells: https://quarto.org/docs/reference/cells/cells-jupyter.html

# Include and execute your code here
neighborhoods = "https://github.com/byuidatascience/data4dwellings/raw/master/data-raw/dwellings_neighborhoods_ml/dwellings_neighborhoods_ml.csv"
dwellings = "https://github.com/byuidatascience/data4dwellings/raw/master/data-raw/dwellings_ml/dwellings_ml.csv"

# import your data here using pandas and the URL
neighborhoods = pd.read_csv(neighborhoods)
dwellings = pd.read_csv(dwellings)

```

## Elevator pitch
This is a simple way of seeing the accuracy and legimilicy of your data extraction by using data classification building models.

## QUESTION|TASK 1

__Create 2-3 charts that evaluate potential relationships between the home variables and `before1980`.__ Explain what you learn from the charts that could help a machine learning algorithm. 

It is in simple terms with the numbers lower and some in the higher end. 

```{python}
# Include and execute your code here

ggplot(dwellings, aes(y='before1980', x='livearea'))+ \
  geom_histogram() 
 

ggplot(dwellings, aes(y='before1980', x='sprice'))+ \
  geom_histogram() 
  
```


## QUESTION|TASK 2

__Build a classification model labeling houses as being built “before 1980” or “during or after 1980”.__ Your goal is to reach or exceed 90% accuracy. Explain your final model choice (algorithm, tuning parameters, etc) and describe what other models you tried.  

I was only able to get to at most 88% accuracy. I tried prices and stories but living area was the only one to get high enough to 90%.

```{python}
# Include and execute your code here

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

features = ['numbdrm', 'numbaths']

dwellings['before1980'] = (dwellings['livearea'] < 1980).astype(int)

X = dwellings[features]
y = dwellings['before1980']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = LogisticRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print(accuracy)


```


## QUESTION|TASK 3

__Justify your classification model by discussing the most important features selected by your model.__ This discussion should include a feature importance chart and a description of the features. 
I chosed the number of bedrooms and baths in the house because it shows the features of the model from above. With their relationship together we can further back up the accuracy/make it better.

```{python}
# Include and execute your code here

ggplot(dwellings, aes(x='numbdrm', y='numbaths')) + \
  geom_boxplot ()

```


## QUESTION|TASK 4

__Describe the quality of your classification model using 2-3 different evaluation metrics.__ You also need to explain how to interpret each of the evaluation metrics you use.  

The first calculates the accuracy of the model which I used in task 2. The percision model shows how reliable the predictions are. 

```{python}
from sklearn.metrics import accuracy_score, precision_score, recall_score


accuracy = accuracy_score(y_test, y_pred)
precision = precision_score(y_test, y_pred)
recall = recall_score(y_test, y_pred)


print(accuracy)
print(precision)
print(recall)
```

---

## STRETCH QUESTION|TASK 1

__Repeat the classification model using 3 different algorithms.__ Display their Feature Importance, and Decision Matrix. Explian the differences between the models and which one you would recommend to the Client.   

_type your results and analysis here_

```{python}
# Include and execute your code here


```


## STRETCH QUESTION|TASK 2

__Join the `dwellings_neighborhoods_ml.csv` data to the `dwelling_ml.csv` on the `parcel` column to create a new dataset. Duplicate the code for the stretch question above and update it to use this data.__ Explain the differences and if this changes the model you recomend to the Client.   

_type your results and analysis here_

```{python}
# Include and execute your code here


```


## STRETCH QUESTION|TASK 3

__Can you build a model that predicts the year a house was built?__ Explain the model and the evaluation metrics you would use to determine if the model is good.  

_type your results and analysis here_

```{python}
# Include and execute your code here


```

---
